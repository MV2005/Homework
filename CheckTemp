NB! mu konspekt on ka siin.
let temp = 5;
if (temp <= 20) {
    console.log("Liiga külm");
} else if (temp <= 40) {
    console.log("OK");
} else {
    console.log("Liiga kuum");
}


string, number, boolean, object   tüüp type

if else conditional
{

}
// Object on tüüp mis salvesta key-value paare.
// key: value
let töötaja = {
    nimi: "  ",
    palk: 10,
    maksaPalka: function () {
          rahakott += palk
}
1 saab teha nii:

console.log(töötaja2.nimi)
console.log(töötaja2.rahakott)


2 saab teha ka nii:
töötaja2.palk += 5
töötaja[muuda] += 5


// Object on tüüp mis salvesta key-value paare.
// key: value
let töötaja = {nimi: "marleen", palk:10}
let töötaja2 = {
    nimi: "marleen",
    palk: 10,
}


kuida kirjutada functionit;
function summa() {
let summma = function () {
    this.rahakott =+ this.palk
kontrollida saab typeof
typeof on millega saab teada mis tüüpi muutuja seal sees on.

// primitive types; 
// number, string, boolean, object, function, undefined , null
// user defined types:
// Math

Githubi: homework/checktemp.js

/*
 Katlal on kolm temperatuurivahemikku
 0-20 on liiga külm             tagastab -1
 21-40 on paras temperatuur     tagastab 0
 42-60 on liiga kuum            tagastab 1
 */


function(temp) {
      let temp 5;
}
if ( temp < 0)
   console.log("Liiga Külm") else if (temp > 20 && temp <=40) {
   
   } else {



function checkTemp(temp) {
    console.log("Temp on " +temp)
}
  if (temp < 0) {
     console.log("liiga külm")
     return -1;
  } else if (temp > 20 && temp <= 40) {
    return 0;
  } else {
    return 1;
   }
}
  checktemp(5)
  checkTemp(10)
  
  veel konspeki;
  function summa (a,b) {
       return a+b
 }
 let vastus = summa(2,7)
 
 let kasKütta = checktemp(44)
 if (kasKütts == true){
 
 
 fuction KasKütta(temp) {
      return temp > 40
 }
 
 Let KasJahutada = true;
 if ("16") {
 
 }
 
 if (temp < 20) {
if (temp > 20 && temp <= 40) {

} else {

}
